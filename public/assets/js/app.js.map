{"version":3,"sources":["module.js","models/Admin.js","models/ControlPanel.js","models/Database.js","models/FTP.js","models/Search.js","models/Website.js","controllers/ListController.js","controllers/SearchController.js","controllers/admin/AddAdminController.js","controllers/admin/DeleteAdminController.js","controllers/admin/EditAdminController.js","controllers/controlpanel/AddControlPanelController.js","controllers/controlpanel/DeleteControlPanelController.js","controllers/controlpanel/EditControlPanelController.js","controllers/database/AddDatabaseController.js","controllers/database/DeleteDatabaseController.js","controllers/database/EditDatabaseController.js","controllers/ftp/AddFTPController.js","controllers/ftp/DeleteFTPController.js","controllers/ftp/EditFTPController.js","controllers/website/AddWebsiteController.js","controllers/website/DeleteWebsiteController.js","controllers/website/DetailsController.js","controllers/website/EditWebsiteController.js","modernizr-custom.min.js"],"names":["angular","module","constant","Modernizr","config","$locationProvider","$routeProvider","when","controller","templateUrl","otherwise","redirectTo","html5Mode","history","hashPrefix","factory","$resource","website_id","id","update","method","text","sort","dir","page","limit","next","$scope","$http","Website","Search","search","loadData","data","get","params","then","response","next_page_url","websites","previous","doSearch","$location","globalSearch","searchWebsites","path","$routeParams","Admin","legend","back_url","website","admin","errors","resetValidation","name","formAdmin","$setValidity","saveAdmin","$valid","$save","added_record","headers","replace","status","forEach","deleteAdmin","$delete","$update","updated_record","ControlPanel","controlpanel","formControlPanel","saveControlPanel","deleteControlPanel","Database","database","type","types","value","label","formDatabase","saveDatabase","deleteDatabase","FTP","ftp","formFTP","saveFTP","deleteFTP","formWebsite","saveWebsite","added_website","deleteWebsite","updated_website","e","n","t","r","s","createElement","b","createElementNS","call","apply","arguments","l","o","i","u","d","toLowerCase","p","f","body","fake","parseInt","appendChild","styleSheet","cssText","createTextNode","style","background","overflow","w","a","parentNode","removeChild","offsetHeight","h","T","modElem","length","CSS","supports","push","join","getComputedStyle","position","m","c","v","y","shift","indexOf","toUpperCase","g","charAt","slice","A","split","E","C","x","_version","_config","classPrefix","enableClasses","enableJSClass","usePrefixes","_q","on","this","setTimeout","addTest","fn","options","addAsyncTest","prototype","navigator","userAgent","documentElement","nodeName","S","setAttribute","removeAttribute","hasEvent","documentMode","_","_cssomPrefixes","_domPrefixes","P","elem","unshift","testAllProps","aliases","Boolean","className","baseVal","RegExp","z","window","document"],"mappings":"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","file":"app.js","sourcesContent":["(function () {\n\n    'use strict';\n\n    angular.module('app.main', ['ngRoute', 'ngResource', 'wu.masonry'])\n        .constant(\"Modernizr\", Modernizr)\n\n        .config(function ($locationProvider, $routeProvider) {\n            $routeProvider.\n                when('/', {controller: \"ListController\", templateUrl: '/assets/application/views/list.html'}).\n                // Website Routes\n                when('/website/add', {\n                    controller: \"AddWebsiteController\",\n                    templateUrl: '/assets/application/views/form.html'\n                }).\n                when('/website/details/:id', {\n                    controller: \"DetailsController\",\n                    templateUrl: '/assets/application/views/details.html'\n                }).\n                when('/website/edit/:id', {\n                    controller: \"EditWebsiteController\",\n                    templateUrl: '/assets/application/views/form.html'\n                }).\n                when('/website/delete/:id', {\n                    controller: \"DeleteWebsiteController\",\n                    templateUrl: '/assets/application/views/delete.html'\n                }).\n                // FTP Routes\n                when('/ftp/:website_id/add', {\n                    controller: \"AddFTPController\",\n                    templateUrl: '/assets/application/views/ftp/form.html'\n                }).\n                when('/ftp/:website_id/:id/edit', {\n                    controller: \"EditFTPController\",\n                    templateUrl: '/assets/application/views/ftp/form.html'\n                }).\n                when('/ftp/:website_id/:id/delete', {\n                    controller: \"DeleteFTPController\",\n                    templateUrl: '/assets/application/views/ftp/delete.html'\n                }).\n                // Database Routes\n                when('/database/:website_id/add', {\n                    controller: \"AddDatabaseController\",\n                    templateUrl: '/assets/application/views/database/form.html'\n                }).\n                when('/database/:website_id/:id/edit', {\n                    controller: \"EditDatabaseController\",\n                    templateUrl: '/assets/application/views/database/form.html'\n                }).\n                when('/database/:website_id/:id/delete', {\n                    controller: \"DeleteDatabaseController\",\n                    templateUrl: '/assets/application/views/database/delete.html'\n                }).\n                // Admin Routes\n                when('/admin/:website_id/add', {\n                    controller: \"AddAdminController\",\n                    templateUrl: '/assets/application/views/admin/form.html'\n                }).\n                when('/admin/:website_id/:id/edit', {\n                    controller: \"EditAdminController\",\n                    templateUrl: '/assets/application/views/admin/form.html'\n                }).\n                when('/admin/:website_id/:id/delete', {\n                    controller: \"DeleteAdminController\",\n                    templateUrl: '/assets/application/views/admin/delete.html'\n                }).\n                // Control Panel Routes\n                when('/controlpanel/:website_id/add', {\n                    controller: \"AddControlPanelController\",\n                    templateUrl: '/assets/application/views/controlpanel/form.html'\n                }).\n                when('/controlpanel/:website_id/:id/edit', {\n                    controller: \"EditControlPanelController\",\n                    templateUrl: '/assets/application/views/controlpanel/form.html'\n                }).\n                when('/controlpanel/:website_id/:id/delete', {\n                    controller: \"DeleteControlPanelController\",\n                    templateUrl: '/assets/application/views/controlpanel/delete.html'\n                }).\n\n                otherwise({redirectTo: '/'});\n\n            $locationProvider.html5Mode(Modernizr.history);\n            if (!Modernizr.history) {\n                $locationProvider.hashPrefix = '!';\n            }\n        });\n\n}());\n","(function () {\n\n    'use strict';\n\n    angular.module('app.main')\n\n        .factory('Admin', function ($resource) {\n            return $resource('/api/admin/:website_id/:id', {website_id:'@website_id', id: '@id'}, {update:{method:'PUT'}});\n        });\n\n}());\n","(function () {\n\n    'use strict';\n\n    angular.module('app.main')\n\n        .factory('ControlPanel', function ($resource) {\n            return $resource('/api/controlpanel/:website_id/:id', {website_id:'@website_id', id: '@id'}, {update:{method:'PUT'}});\n        });\n\n}());\n","(function () {\n\n    'use strict';\n\n    angular.module('app.main')\n\n        .factory('Database', function ($resource) {\n            return $resource('/api/database/:website_id/:id', {website_id:'@website_id', id: '@id'}, {update:{method:'PUT'}});\n        });\n\n}());\n","(function () {\n\n    'use strict';\n\n    angular.module('app.main')\n\n        .factory('FTP', function ($resource) {\n            return $resource('/api/ftp/:website_id/:id', {id: '@id', website_id:'@website_id'}, {update:{method:'PUT'}});\n        });\n\n}());\n","(function () {\n\n    'use strict';\n\n    angular.module('app.main')\n\n        .factory('Search', function () {\n            return {text:'', sort: 'name', dir:\"ASC\", page: 1, limit: 20, next: false};\n        });\n\n}());\n","(function () {\n\n    'use strict';\n\n    angular.module('app.main')\n\n        .factory('Website', function ($resource) {\n            return $resource('/api/website/:id', {id: '@id'}, {update:{method:'PUT'}});\n        });\n\n}());\n","(function () {\n\n    'use strict';\n\n    angular.module('app.main')\n\n        .controller('ListController', function ($scope, $http, Website, Search) {\n            $scope.search = Search;\n\n            $scope.loadData = function(){\n                var data = {page: $scope.search.page, limit: $scope.search.limit, search: $scope.search.text, sort:$scope.search.sort, dir:$scope.search.dir};\n                $http.get('/api/website', {params: data}).\n                    then(function(response) {\n                        // this callback will be called asynchronously\n                        // when the response is available\n                        if(response.data.next_page_url){\n                            // There is another page\n                            $scope.search.next = true;\n                        } else {\n                            $scope.search.next = false;\n                        }\n                        $scope.websites = response.data.data;\n                    }, function(response) {\n                        // called asynchronously if an error occurs\n                        // or server returns response with an error status.\n                    });\n            };\n            $scope.previous = function(){\n                if($scope.search.page > 1){\n                    $scope.search.page--;\n                    $scope.loadData();\n                }\n            };\n            $scope.next = function(){\n                if($scope.search.next){\n                    $scope.search.page++;\n                    $scope.loadData();\n                }\n            };\n            $scope.doSearch = function(){\n                $scope.search.next = false;\n                $scope.search.page = 1;\n                $scope.loadData();\n            }\n            $scope.loadData();\n        });\n\n}());\n","(function () {\n\n    'use strict';\n\n    angular.module('app.main')\n\n        .controller('SearchController', function ($scope, Search, $location) {\n            $scope.search = Search;\n            $scope.globalSearch = '';\n            $scope.searchWebsites = function(){\n                $scope.search.text = $scope.globalSearch;\n                $scope.globalSearch = '';\n                $scope.search.page = 1;\n                $scope.search.next = false;\n                $location.path('/').search({text:$scope.search.text});\n            }\n        });\n\n}());\n","(function () {\n\n    'use strict';\n\n    angular.module('app.main')\n\n        .controller('AddAdminController', function ($scope, $resource, $routeParams, Website, Admin, $location) {\n            $scope.legend = \"Add Admin Login Credentials\";\n            $scope.back_url = \"/website/\" + $routeParams.website_id;\n            $scope.website = Website.get({id: $routeParams.website_id});\n            $scope.admin = new Admin({website_id: $routeParams.website_id});\n            $scope.errors = {};\n            $scope.resetValidation = function (name) {\n                delete $scope.errors[name];\n                if (!$scope.errors[name]) {\n                    $scope.formAdmin[name].$setValidity('remote', true);\n                }\n            };\n            $scope.saveAdmin = function () {\n                if ($scope.formAdmin.$valid) {\n                    $scope.admin.$save(function (added_record, headers) {\n                        $scope.admin = added_record;\n                        $location.path('/website/details/' + added_record.website_id).replace();\n                    }, function (response) {\n                        if (response.status == 422) {\n                            $scope.errors = response.data;\n                            angular.forEach(response.data, function (errors, name) {\n                                $scope.formAdmin[name].$setValidity('remote', false);\n                            });\n                        }\n                    });\n                }\n            };\n        });\n\n}());\n","(function () {\n\n    'use strict';\n\n    angular.module('app.main')\n\n        .controller('DeleteAdminController', function ($scope, $resource, $routeParams, Website, Admin, $location) {\n            $scope.website = Website.get({id:$routeParams.website_id});\n            $scope.admin = Admin.get({id:$routeParams.id, website_id:$routeParams.website_id});\n            $scope.deleteAdmin = function(){\n                $scope.admin.$delete(function(){\n                    $location.path('/website/details/'+$routeParams.website_id).replace();\n                });\n            };\n        });\n\n}());\n","(function () {\n\n    'use strict';\n\n    angular.module('app.main')\n\n        .controller('EditAdminController', function ($scope, $resource, $routeParams, Website, Admin, $location) {\n            $scope.legend = \"Update Admin Login Credentials\";\n            $scope.back_url = \"/website/details/\" + $routeParams.website_id;\n            $scope.website = Website.get({id: $routeParams.website_id});\n            $scope.admin = Admin.get({id: $routeParams.id, website_id: $routeParams.website_id});\n            $scope.errors = {};\n            $scope.resetValidation = function (name) {\n                delete $scope.errors[name];\n                if (!$scope.errors[name]) {\n                    $scope.formAdmin[name].$setValidity('remote', true);\n                }\n            };\n            $scope.saveAdmin = function () {\n                if ($scope.formAdmin.$valid) {\n                    $scope.admin.$update(function (updated_record) {\n                        $scope.admin = updated_record;\n                        $location.path('/website/details/' + updated_record.website_id).replace();\n                    }, function (response) {\n                        if (response.status == 422) {\n                            $scope.errors = response.data;\n                            angular.forEach(response.data, function (errors, name) {\n                                $scope.formAdmin[name].$setValidity('remote', false);\n                            });\n                        }\n                    });\n                }\n            };\n        });\n\n}());\n","(function () {\n\n    'use strict';\n\n    angular.module('app.main')\n\n        .controller('AddControlPanelController', function ($scope, $resource, $routeParams, Website, ControlPanel, $location) {\n            $scope.legend = \"Add Control Panel Login Credentials\";\n            $scope.back_url = \"/website/\"+$routeParams.website_id;\n            $scope.website = Website.get({id:$routeParams.website_id});\n            $scope.controlpanel = new ControlPanel({website_id: $routeParams.website_id});\n            $scope.errors = {};\n            $scope.resetValidation = function (name) {\n                delete $scope.errors[name];\n                if (!$scope.errors[name]) {\n                    $scope.formControlPanel[name].$setValidity('remote', true);\n                }\n            };\n            $scope.saveControlPanel = function(){\n                if($scope.formControlPanel.$valid){\n                    $scope.controlpanel.$save(function(added_record){\n                        $scope.controlpanel = added_record;\n                        $location.path('/website/details/'+added_record.website_id).replace();\n                    }, function(response){\n                        if(response.status == 422){\n                            $scope.errors = response.data;\n                            angular.forEach(response.data, function(errors, name){\n                                $scope.formControlPanel[name].$setValidity('remote', false);\n                            });\n                        }\n                    });\n                }\n            };\n        });\n\n}());\n","(function () {\n\n    'use strict';\n\n    angular.module('app.main')\n\n        .controller('DeleteControlPanelController', function ($scope, $resource, $routeParams, Website, ControlPanel, $location) {\n            $scope.website = Website.get({id:$routeParams.website_id});\n            $scope.controlpanel = ControlPanel.get({id:$routeParams.id, website_id:$routeParams.website_id});\n            $scope.deleteControlPanel = function(){\n                $scope.controlpanel.$delete(function(){\n                    $location.path('/website/details/'+$routeParams.website_id).replace();\n                });\n            };\n        });\n\n}());\n","(function () {\n\n    'use strict';\n\n    angular.module('app.main')\n\n        .controller('EditControlPanelController', function ($scope, $resource, $routeParams, Website, ControlPanel, $location) {\n            $scope.legend = \"Update Control Panel Login Credentials\";\n            $scope.back_url = \"/website/details/\"+$routeParams.website_id;\n            $scope.website = Website.get({id:$routeParams.website_id});\n            $scope.controlpanel = ControlPanel.get({id:$routeParams.id, website_id:$routeParams.website_id});\n            $scope.errors = {};\n            $scope.resetValidation = function (name) {\n                delete $scope.errors[name];\n                if (!$scope.errors[name]) {\n                    $scope.formControlPanel[name].$setValidity('remote', true);\n                }\n            };\n            $scope.saveControlPanel = function(){\n                if($scope.formControlPanel.$valid){\n                    $scope.controlpanel.$update(function(updated_record){\n                        $scope.controlpanel = updated_record;\n                        $location.path('/website/details/'+updated_record.website_id).replace();\n                    }, function(response){\n                        if(response.status == 422){\n                            $scope.errors = response.data;\n                            angular.forEach(response.data, function(errors, name){\n                                $scope.formControlPanel[name].$setValidity('remote', false);\n                            });\n                        }\n                    });\n                }\n            };\n        });\n\n}());\n","(function () {\n\n    'use strict';\n\n    angular.module('app.main')\n\n        .controller('AddDatabaseController', function ($scope, $resource, $routeParams, Website, Database, $location) {\n            $scope.legend = \"Add Database Credentials\";\n            $scope.back_url = \"/website/\"+$routeParams.website_id;\n            $scope.website = Website.get({id:$routeParams.website_id});\n            $scope.database = new Database({website_id: $routeParams.website_id, type: 'mysql'});\n            $scope.types = [{value:'mysql', label:'MySQL'}, {value:'sqlite', label:'SQLite'}, {value:'mssql', label:'MSSQL'}, {value:'oracle', label:'Oracle Database'}, {value:'pgsql', label:'Postgres'}, {value:'access', label:'Microsoft Access'}, {value:'other', label:'Other'}];\n            $scope.errors = {};\n            $scope.resetValidation = function (name) {\n                delete $scope.errors[name];\n                if (!$scope.errors[name]) {\n                    $scope.formDatabase[name].$setValidity('remote', true);\n                }\n            };\n            $scope.saveDatabase = function(){\n                if($scope.formDatabase.$valid){\n                    $scope.database.$save(function(added_record){\n                        $scope.database = added_record;\n                        $location.path('/website/details/'+added_record.website_id).replace();\n                    }, function(response){\n                        if(response.status == 422){\n                            $scope.errors = response.data;\n                            angular.forEach(response.data, function(errors, name){\n                                $scope.formDatabase[name].$setValidity('remote', false);\n                            });\n                        }\n                    });\n                }\n            };\n        });\n\n}());\n","(function () {\n\n    'use strict';\n\n    angular.module('app.main')\n\n        .controller('DeleteDatabaseController', function ($scope, $resource, $routeParams, Website, Database, $location) {\n            $scope.website = Website.get({id:$routeParams.website_id});\n            $scope.database = Database.get({id:$routeParams.id, website_id:$routeParams.website_id});\n            $scope.deleteDatabase = function(){\n                $scope.database.$delete(function(){\n                    $location.path('/website/details/'+$routeParams.website_id).replace();\n                });\n            };\n        });\n\n}());\n","(function () {\n\n    'use strict';\n\n    angular.module('app.main')\n\n        .controller('EditDatabaseController', function ($scope, $resource, $routeParams, Website, Database, $location) {\n            $scope.legend = \"Update Database Login Credentials\";\n            $scope.back_url = \"/website/details/\"+$routeParams.website_id;\n            $scope.website = Website.get({id:$routeParams.website_id});\n            $scope.database = Database.get({id:$routeParams.id, website_id:$routeParams.website_id, type: 'mysql'});\n            $scope.types = [{value:'mysql', label:'MySQL'}, {value:'sqlite', label:'SQLite'}, {value:'mssql', label:'MSSQL'}, {value:'oracle', label:'Oracle Database'}, {value:'pgsql', label:'Postgres'}, {value:'access', label:'Microsoft Access'}, {value:'other', label:'Other'}];\n            $scope.errors = {};\n            $scope.resetValidation = function (name) {\n                delete $scope.errors[name];\n                if (!$scope.errors[name]) {\n                    $scope.formDatabase[name].$setValidity('remote', true);\n                }\n            };\n            $scope.saveDatabase = function(){\n                if($scope.formDatabase.$valid){\n                    $scope.database.$update(function(updated_record){\n                        $scope.database = updated_record;\n                        $location.path('/website/details/'+updated_record.website_id).replace();\n                    }, function(response){\n                        if(response.status == 422){\n                            $scope.errors = response.data;\n                            angular.forEach(response.data, function(errors, name){\n                                $scope.formDatabase[name].$setValidity('remote', false);\n                            });\n                        }\n                    });\n                }\n            };\n        });\n\n}());\n","(function () {\n\n    'use strict';\n\n    angular.module('app.main')\n\n        .controller('AddFTPController', function ($scope, $resource, $routeParams, Website, FTP, $location) {\n            $scope.legend = \"Add FTP Credentials\";\n            $scope.back_url = \"/website/\"+$routeParams.website_id;\n            $scope.website = Website.get({id:$routeParams.website_id});\n            $scope.ftp = new FTP({website_id: $routeParams.website_id, type: 'ftp'});\n            $scope.types = [{value:'ftp', label:'FTP'}, {value:'sftp', label:'SFTP'}, {value:'ftps', label:'FTPS'}, {value:'webdav', label:'WebDAV'}, {value:'other', label:'Other'}];\n            $scope.errors = {};\n            $scope.resetValidation = function (name) {\n                delete $scope.errors[name];\n                if (!$scope.errors[name]) {\n                    $scope.formFTP[name].$setValidity('remote', true);\n                }\n            };\n            $scope.saveFTP = function(){\n                if($scope.formFTP.$valid){\n                    $scope.ftp.$save(function(added_record){\n                        $scope.ftp = added_record;\n                        $location.path('/website/details/'+added_record.website_id).replace();\n                    }, function(response){\n                        if(response.status == 422){\n                            $scope.errors = response.data;\n                            angular.forEach(response.data, function(errors, name){\n                                $scope.formFTP[name].$setValidity('remote', false);\n                            });\n                        }\n                    });\n                }\n            };\n        });\n\n}());\n","(function () {\n\n    'use strict';\n\n    angular.module('app.main')\n\n        .controller('DeleteFTPController', function ($scope, $resource, $routeParams, Website, FTP, $location) {\n            $scope.website = Website.get({id:$routeParams.website_id});\n            $scope.ftp = FTP.get({id:$routeParams.id, website_id:$routeParams.website_id});\n            $scope.deleteFTP = function(){\n                $scope.ftp.$delete(function(){\n                    $location.path('/website/details/'+$scope.website.id).replace();\n                });\n            };\n        });\n\n}());\n","(function () {\n\n    'use strict';\n\n    angular.module('app.main')\n\n        .controller('EditFTPController', function ($scope, $resource, $routeParams, Website, FTP, $location) {\n            $scope.legend = \"Update FTP Credentials\";\n            $scope.back_url = \"/website/details/\"+$routeParams.website_id;\n            $scope.website = Website.get({id:$routeParams.website_id});\n            $scope.ftp = FTP.get({id:$routeParams.id, website_id:$routeParams.website_id});\n            $scope.types = [{value:'ftp', label:'FTP'}, {value:'sftp', label:'SFTP'}, {value:'ftps', label:'FTPS'}, {value:'webdav', label:'WebDAV'}, {value:'other', label:'Other'}];\n            $scope.errors = {};\n            $scope.resetValidation = function (name) {\n                delete $scope.errors[name];\n                if (!$scope.errors[name]) {\n                    $scope.formFTP[name].$setValidity('remote', true);\n                }\n            };\n            $scope.saveFTP = function(){\n                if($scope.formFTP.$valid){\n                    $scope.ftp.$update(function(updated_record){\n                        $scope.ftp = updated_record;\n                        $location.path('/website/details/'+updated_record.website_id).replace();\n                    }, function(response){\n                        if(response.status == 422){\n                            $scope.errors = response.data;\n                            angular.forEach(response.data, function(errors, name){\n                                $scope.formFTP[name].$setValidity('remote', false);\n                            });\n                        }\n                    });\n                }\n            };\n        });\n\n}());\n","(function () {\n\n    'use strict';\n\n    angular.module('app.main')\n\n        .controller('AddWebsiteController', function ($scope, $resource, Website, $location, $routeParams) {\n            $scope.legend = \"Add Website\";\n            $scope.back_url = \"/\";\n            $scope.website = new Website({});\n            $scope.errors = {};\n            $scope.resetValidation = function (name) {\n                delete $scope.errors[name];\n                if (!$scope.errors[name]) {\n                    $scope.formWebsite[name].$setValidity('remote', true);\n                }\n            };\n            $scope.saveWebsite = function () {\n                if ($scope.formWebsite.$valid) {\n                    $scope.website.$save({website_id: $routeParams.website_id}, function (added_website) {\n                        $scope.website = added_website;\n                        $location.path('/website/details/' + added_website.id).replace();\n                    }, function (response) {\n                        if (response.status == 422) {\n                            $scope.errors = response.data;\n                            angular.forEach(response.data, function (errors, name) {\n                                $scope.formWebsite[name].$setValidity('remote', false);\n                            });\n                        }\n                    });\n                }\n            };\n        });\n\n}());\n","(function () {\n\n    'use strict';\n\n    angular.module('app.main')\n\n        .controller('DeleteWebsiteController', function ($scope, $resource, $routeParams, Website, $location) {\n            $scope.website = Website.get({id:$routeParams.id});\n            $scope.deleteWebsite = function(){\n                $scope.website.$delete(function(){\n                    $location.path('/').replace();\n                });\n            };\n        });\n\n}());\n","(function () {\n\n    'use strict';\n\n    angular.module('app.main')\n\n        .controller('DetailsController', function ($scope, $resource, $routeParams, Website) {\n            $scope.website = Website.get({id:$routeParams.id});\n        });\n\n}());\n","(function () {\n\n    'use strict';\n\n    angular.module('app.main')\n\n        .controller('EditWebsiteController', function ($scope, $resource, $routeParams, Website, $location) {\n            $scope.legend = \"Edit Website\";\n            $scope.back_url = \"/website/details/\" + $routeParams.id;\n            $scope.website = Website.get({id: $routeParams.id});\n            $scope.errors = {};\n            $scope.resetValidation = function (name) {\n                delete $scope.errors[name];\n                if (!$scope.errors[name]) {\n                    $scope.formWebsite[name].$setValidity('remote', true);\n                }\n            };\n            $scope.saveWebsite = function () {\n                if ($scope.formWebsite.$valid) {\n                    $scope.website.$update({website_id: $routeParams.website_id}, function (updated_website) {\n                        $scope.website = updated_website;\n                        $location.path('/website/details/' + updated_website.id).replace();\n                    }, function (response) {\n                        if (response.status == 422) {\n                            $scope.errors = response.data;\n                            angular.forEach(response.data, function (errors, name) {\n                                $scope.formWebsite[name].$setValidity('remote', false);\n                            });\n                        }\n                    });\n                }\n            };\n        });\n\n}());\n","/*! modernizr 3.0.0-alpha.4 (Custom Build) | MIT *\n * http://modernizr.com/download/#-flexbox-hashchange-history !*/\n!function(e,n,t){function r(e,n){return typeof e===n}function o(){var e,n,t,o,i,s,a;for(var f in C){if(e=[],n=C[f],n.name&&(e.push(n.name.toLowerCase()),n.options&&n.options.aliases&&n.options.aliases.length))for(t=0;t<n.options.aliases.length;t++)e.push(n.options.aliases[t].toLowerCase());for(o=r(n.fn,\"function\")?n.fn():n.fn,i=0;i<e.length;i++)s=e[i],a=s.split(\".\"),1===a.length?Modernizr[a[0]]=o:(!Modernizr[a[0]]||Modernizr[a[0]]instanceof Boolean||(Modernizr[a[0]]=new Boolean(Modernizr[a[0]])),Modernizr[a[0]][a[1]]=o),g.push((o?\"\":\"no-\")+a.join(\"-\"))}}function i(e){var n=w.className,t=Modernizr._config.classPrefix||\"\";if(b&&(n=n.baseVal),Modernizr._config.enableJSClass){var r=new RegExp(\"(^|\\\\s)\"+t+\"no-js(\\\\s|$)\");n=n.replace(r,\"$1\"+t+\"js$2\")}Modernizr._config.enableClasses&&(n+=\" \"+t+e.join(\" \"+t),b?w.className.baseVal=n:w.className=n)}function s(){return\"function\"!=typeof n.createElement?n.createElement(arguments[0]):b?n.createElementNS.call(n,\"http://www.w3.org/2000/svg\",arguments[0]):n.createElement.apply(n,arguments)}function a(e){return e.replace(/([a-z])-([a-z])/g,function(e,n,t){return n+t.toUpperCase()}).replace(/^-/,\"\")}function f(e,n){return!!~(\"\"+e).indexOf(n)}function u(e,n){return function(){return e.apply(n,arguments)}}function l(e,n,t){var o;for(var i in e)if(e[i]in n)return t===!1?e[i]:(o=n[e[i]],r(o,\"function\")?u(o,t||n):o);return!1}function d(e){return e.replace(/([A-Z])/g,function(e,n){return\"-\"+n.toLowerCase()}).replace(/^ms-/,\"-ms-\")}function c(){var e=n.body;return e||(e=s(b?\"svg\":\"body\"),e.fake=!0),e}function p(e,t,r,o){var i,a,f,u,l=\"modernizr\",d=s(\"div\"),p=c();if(parseInt(r,10))for(;r--;)f=s(\"div\"),f.id=o?o[r]:l+(r+1),d.appendChild(f);return i=s(\"style\"),i.type=\"text/css\",i.id=\"s\"+l,(p.fake?p:d).appendChild(i),p.appendChild(d),i.styleSheet?i.styleSheet.cssText=e:i.appendChild(n.createTextNode(e)),d.id=l,p.fake&&(p.style.background=\"\",p.style.overflow=\"hidden\",u=w.style.overflow,w.style.overflow=\"hidden\",w.appendChild(p)),a=t(d,e),p.fake?(p.parentNode.removeChild(p),w.style.overflow=u,w.offsetHeight):d.parentNode.removeChild(d),!!a}function m(n,r){var o=n.length;if(\"CSS\"in e&&\"supports\"in e.CSS){for(;o--;)if(e.CSS.supports(d(n[o]),r))return!0;return!1}if(\"CSSSupportsRule\"in e){for(var i=[];o--;)i.push(\"(\"+d(n[o])+\":\"+r+\")\");return i=i.join(\" or \"),p(\"@supports (\"+i+\") { #modernizr { position: absolute; } }\",function(e){return\"absolute\"==getComputedStyle(e,null).position})}return t}function h(e,n,o,i){function u(){d&&(delete T.style,delete T.modElem)}if(i=r(i,\"undefined\")?!1:i,!r(o,\"undefined\")){var l=m(e,o);if(!r(l,\"undefined\"))return l}for(var d,c,p,h,v,y=[\"modernizr\",\"tspan\"];!T.style;)d=!0,T.modElem=s(y.shift()),T.style=T.modElem.style;for(p=e.length,c=0;p>c;c++)if(h=e[c],v=T.style[h],f(h,\"-\")&&(h=a(h)),T.style[h]!==t){if(i||r(o,\"undefined\"))return u(),\"pfx\"==n?h:!0;try{T.style[h]=o}catch(g){}if(T.style[h]!=v)return u(),\"pfx\"==n?h:!0}return u(),!1}function v(e,n,t,o,i){var s=e.charAt(0).toUpperCase()+e.slice(1),a=(e+\" \"+A.join(s+\" \")+s).split(\" \");return r(n,\"string\")||r(n,\"undefined\")?h(a,n,o,i):(a=(e+\" \"+E.join(s+\" \")+s).split(\" \"),l(a,n,t))}function y(e,n,r){return v(e,t,t,n,r)}var g=[],C=[],x={_version:\"3.0.0-alpha.4\",_config:{classPrefix:\"\",enableClasses:!0,enableJSClass:!0,usePrefixes:!0},_q:[],on:function(e,n){var t=this;setTimeout(function(){n(t[e])},0)},addTest:function(e,n,t){C.push({name:e,fn:n,options:t})},addAsyncTest:function(e){C.push({name:null,fn:e})}},Modernizr=function(){};Modernizr.prototype=x,Modernizr=new Modernizr,Modernizr.addTest(\"history\",function(){var n=navigator.userAgent;return-1===n.indexOf(\"Android 2.\")&&-1===n.indexOf(\"Android 4.0\")||-1===n.indexOf(\"Mobile Safari\")||-1!==n.indexOf(\"Chrome\")||-1!==n.indexOf(\"Windows Phone\")?e.history&&\"pushState\"in e.history:!1});var w=n.documentElement,b=\"svg\"===w.nodeName.toLowerCase(),S=function(e){function t(n,t){var o;return n?(t&&\"string\"!=typeof t||(t=s(t||\"div\")),n=\"on\"+n,o=n in t,!o&&r&&(t.setAttribute||(t=s(\"div\")),t.setAttribute(n,\"\"),o=\"function\"==typeof t[n],t[n]!==e&&(t[n]=e),t.removeAttribute(n)),o):!1}var r=!(\"onblur\"in n.documentElement);return t}();x.hasEvent=S,Modernizr.addTest(\"hashchange\",function(){return S(\"hashchange\",e)===!1?!1:n.documentMode===t||n.documentMode>7});var _=\"Moz O ms Webkit\",A=x._config.usePrefixes?_.split(\" \"):[];x._cssomPrefixes=A;var E=x._config.usePrefixes?_.toLowerCase().split(\" \"):[];x._domPrefixes=E;var P={elem:s(\"modernizr\")};Modernizr._q.push(function(){delete P.elem});var T={style:P.elem.style};Modernizr._q.unshift(function(){delete T.style}),x.testAllProps=v,x.testAllProps=y,Modernizr.addTest(\"flexbox\",y(\"flexBasis\",\"1px\",!0)),o(),i(g),delete x.addTest,delete x.addAsyncTest;for(var z=0;z<Modernizr._q.length;z++)Modernizr._q[z]();e.Modernizr=Modernizr}(window,document);"]}